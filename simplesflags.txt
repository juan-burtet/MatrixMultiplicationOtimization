==723== Memcheck, a memory error detector
==723== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==723== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==723== Command: ./simplesflags
==723==
==723==
==723== HEAP SUMMARY:
==723==     in use at exit: 12,607,560 bytes in 3,078 blocks
==723==   total heap usage: 3,079 allocs, 1 frees, 12,611,656 bytes allocated
==723==
==723== 4,202,520 (24 direct, 4,202,496 indirect) bytes in 1 blocks are definitely lost in loss record 7 of 9
==723==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==723==    by 0x108911: alocar_matriz (in /home/juan/GitHub/MatrixMultiplicationOtimization/simplesflags)
==723==    by 0x1086F2: main (in /home/juan/GitHub/MatrixMultiplicationOtimization/simplesflags)
==723==
==723== 4,202,520 (24 direct, 4,202,496 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 9
==723==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==723==    by 0x108911: alocar_matriz (in /home/juan/GitHub/MatrixMultiplicationOtimization/simplesflags)
==723==    by 0x108704: main (in /home/juan/GitHub/MatrixMultiplicationOtimization/simplesflags)
==723==
==723== 4,202,520 (24 direct, 4,202,496 indirect) bytes in 1 blocks are definitely lost in loss record 9 of 9
==723==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==723==    by 0x1089A6: multiplica_matrizes (in /home/juan/GitHub/MatrixMultiplicationOtimization/simplesflags)
==723==    by 0x108749: main (in /home/juan/GitHub/MatrixMultiplicationOtimization/simplesflags)
==723==
==723== LEAK SUMMARY:
==723==    definitely lost: 72 bytes in 3 blocks
==723==    indirectly lost: 12,607,488 bytes in 3,075 blocks
==723==      possibly lost: 0 bytes in 0 blocks
==723==    still reachable: 0 bytes in 0 blocks
==723==         suppressed: 0 bytes in 0 blocks
==723==
==723== For counts of detected and suppressed errors, rerun with: -v
==723== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
